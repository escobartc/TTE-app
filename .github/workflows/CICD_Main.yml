name: Main Branch CI

on:
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Set environment variables for secrets
        run: |
          export DB_URL="${{ secrets.DB_URL }}"
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_USERNAME="${{ secrets.DB_USERNAME }}"
          export DB_PORT="${{ secrets.DB_PORT }}"
          export SECRET_KEY="${{ secrets.SECRET_KEY }}"     
      - name: Change to project directory
        run: cd /home/runner/work/TTE-app/TTE-app/tte-app

      # Use the appropriate commit SHA based on the event type
      - name: Build with Maven
        run: |
          mvn -f /home/runner/work/TTE-app/TTE-app/tte-app/pom.xml clean package
      - name: Copy JAR file to Docker directory
        run: cp /home/runner/work/TTE-app/TTE-app/tte-app/target/tte-app-0.0.1-SNAPSHOT.jar /home/runner/work/TTE-app/TTE-app/tte-app/

      - name: Build Docker image
        run: |
          docker build -t tech-trend-emporium-app:${{ github.sha }} -f /home/runner/work/TTE-app/TTE-app/tte-app/Dockerfile .
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag Docker image
        run: |
          docker tag tech-trend-emporium-app:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tteapp:${{ github.sha }}
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tteapp:${{ github.sha }}
      - name: Deploy docker image to EC2
        run: sudo apt-get install -y openssh-client
          
          # Connect to EC2 instance and execute commands
          - name: SSH into EC2 instance
            uses: appleboy/ssh-action@master
            with:
              host: ${{ secrets.HOST }}
              username: ec2-user
              key: ${{ secrets.EC2_PRIVATE_KEY }}
              port: 22
              script: |
                # Run commands on the remote server
                echo "Connected to EC2 instance"

